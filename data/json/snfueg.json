{
  "body_html": "<p>字符串函数</p><pre data-lang=\"sql\"><code>#CHAR_LENGTH(s)    返回字符串s的字符数\nSELECT CHAR_LENGTH('你好123') -- 5\n#LENGTH(s)    返回字符串s的长度\nSELECT LENGTH('你好123') -- 9\n\n#CONCAT(s1,s2,...)    将字符串s1,s2等多个字符串合并为一个字符串\nSELECT CONCAT('12','34') -- 1234\n#CONCAT_WS(x,s1,s2,...)    同CONCAT(s1,s2,...)函数，但是每个字符串直接要加上x\nSELECT CONCAT_WS('@','12','34') -- 12@34\n\nINSERT(s1,x,len,s2)\t将字符串s2替换s1的x位置开始长度为len的字符串\nSELECT INSERT('12345',1,3,'abc') -- abc45\n\n#UPPER(s),UCAASE(S)\t将字符串s的所有字母变成大写字母\nSELECT UPPER('abc') -- ABC\n#LOWER(s),LCASE(s)    将字符串s的所有字母变成小写字母\nSELECT LOWER('ABC') -- abc\n\n#LEFT(s,n)    返回字符串s的前n个字符\nSELECT LEFT('abcde',2) -- ab\n#RIGHT(s,n)\t    返回字符串s的后n个字符\nSELECT RIGHT('abcde',2) -- de\n\n#LPAD(s1,len,s2)\t字符串s2来填充s1的开始处，使字符串长度达到len\nSELECT LPAD('abc',5,'xx') -- xxabc\n#RPAD(s1,len,s2)\t字符串s2来填充s1的结尾处，使字符串的长度达到len\nSELECT RPAD('abc',5,'xx') -- abcxx\n\nLTRIM(s)\t去掉字符串s开始处的空格\nRTRIM(s)\t去掉字符串s结尾处的空格\nTRIM(s)\t去掉字符串s开始和结尾处的空格\nTRIM(s1 FROM s)\t去掉字符串s中开始处和结尾处的字符串s1 \nSELECT TRIM('@' FROM '@@abc@@') -- abc\n\nREPEAT(s,n)\t将字符串s重复n次\nSELECT REPEAT('ab',3) -- ababab\n\nSPACE(n)\t返回n个空格\n\n#REPLACE(s,s1,s2)\t将字符串s2替代字符串s中的字符串s1\nSELECT REPLACE('abc','a','x') --xbc\n\nSTRCMP(s1,s2)\t比较字符串s1和s2\nSUBSTRING(s,n,len)\t获取从字符串s中的第n个位置开始长度为len的字符串\nMID(s,n,len)\t同SUBSTRING(s,n,len)\n\n#LOCATE(s1,s),POSITION(s1 IN s)\t从字符串s中获取s1的开始位置\nSELECT LOCATE('b', 'abc') -- 2\n\n#INSTR(s,s1)    从字符串s中获取s1的开始位置\nSELECT INSTR('abc','b') -- 2</code></pre><p><br /></p><table class=\"lake-table\" style=\"width: 831px;\"><colgroup><col width=\"225\"></col><col width=\"605\"></col></colgroup><tbody><tr><td><p>字符串函数</p></td><td><p>说明</p></td></tr><tr><td><p>CHAR_LENGTH(s)</p></td><td><p>返回字符串s的字符数</p><p><code>SELECT CHAR_LENGTH('你好123') -- 5</code></p></td></tr><tr><td><p>LENGTH(s)</p></td><td><p>返回字符串s的长度</p><p><code>SELECT LENGTH('你好123') -- 9</code></p></td></tr><tr><td><p>CONCAT(s1,s2,...)</p></td><td><p>将字符串s1,s2等多个字符串合并为一个字符串</p><p><code>SELECT CONCAT('12','34') -- 1234</code></p></td></tr><tr><td><p>CONCAT_WS(x,s1,s2,...)</p></td><td><p>同CONCAT(s1,s2,...)函数，但是每个字符串直接要加上x</p><p><code>SELECT CONCAT_WS('@','12','34') -- 12@34</code></p></td></tr><tr><td><p>INSERT(s1,x,len,s2)</p></td><td><p>将字符串s2替换s1的x位置开始长度为len的字符串</p><p>SELECT INSERT('12345',1,3,'abc') -- abc45</p></td></tr><tr><td><p>UPPER(s),UCAASE(S)</p></td><td><p>将字符串s的所有字母变成大写字母</p><p>SELECT UPPER('abc') -- ABC</p></td></tr><tr><td><p>LOWER(s),LCASE(s)</p></td><td><p>将字符串s的所有字母变成小写字母</p><p>SELECT LOWER('ABC') -- abc</p></td></tr><tr><td><p>LEFT(s,n)</p></td><td><p>返回字符串s的前n个字符</p><p>SELECT LEFT('abcde',2) -- ab</p></td></tr><tr><td><p>RIGHT(s,n)</p></td><td><p>返回字符串s的后n个字符</p><p>SELECT RIGHT('abcde',2) -- de</p></td></tr><tr><td><p>LPAD(s1,len,s2)</p></td><td><p>字符串s2来填充s1的开始处，使字符串长度达到len</p><p>SELECT LPAD('abc',5,'xx') -- xxabc</p></td></tr><tr><td><p>RPAD(s1,len,s2)</p></td><td><p>字符串s2来填充s1的结尾处，使字符串的长度达到len</p><p>SELECT RPAD('abc',5,'xx') -- abcxx</p></td></tr><tr><td><p>LTRIM(s)</p></td><td><p>去掉字符串s开始处的空格</p></td></tr><tr><td><p>RTRIM(s)</p></td><td><p>去掉字符串s结尾处的空格</p></td></tr><tr><td><p>TRIM(s)</p></td><td><p>去掉字符串s开始和结尾处的空格</p></td></tr><tr><td><p>TRIM(s1 FROM s)</p></td><td><p>去掉字符串s中开始处和结尾处的字符串s1</p><p>SELECT TRIM('@' FROM '@@abc@@') -- abc</p></td></tr><tr><td><p>REPEAT(s,n)</p></td><td><p>将字符串s重复n次</p><p>SELECT REPEAT('ab',3) -- ababab</p></td></tr><tr><td><p>SPACE(n)</p></td><td><p>返回n个空格</p></td></tr><tr><td><p>REPLACE(s,s1,s2)</p></td><td><p>将字符串s2替代字符串s中的字符串s1</p><p>SELECT REPLACE('abc','a','x') --xbc</p></td></tr><tr><td><p>STRCMP(s1,s2)</p></td><td><p>比较字符串s1和s2</p></td></tr><tr><td><p>SUBSTRING(s,n,len)</p></td><td><p>获取从字符串s中的第n个位置开始长度为len的字符串</p></td></tr><tr><td><p>MID(s,n,len)</p></td><td><p>同SUBSTRING(s,n,len)</p></td></tr><tr><td><p>LOCATE(s1,s),POSITION(s1 IN s)</p></td><td><p>从字符串s中获取s1的开始位置</p><p>SELECT LOCATE('b', 'abc') -- 2</p></td></tr><tr><td><p>INSTR(s,s1)</p></td><td><p>从字符串s中获取s1的开始位置</p><p>SELECT INSTR('abc','b') -- 2</p></td></tr><tr><td><p>REVERSE(s)</p></td><td><p>将字符串s的顺序反过来</p><p>SELECT REVERSE('abc') -- cba</p></td></tr><tr><td><p>ELT(n,s1,s2,...)</p></td><td><p>返回第n个字符串</p><p>SELECT ELT(2,'a','b','c') -- b</p></td></tr><tr><td><p>EXPORT_SET(x,s1,s2)</p></td><td><p>返回一个字符串，在这里对于在“bits”中设定每一位，你得到一个“on”字符串，并且对于每个复位(reset)的位，你得到一个 “off”字符串。每个字符串用“separator”分隔(缺省“,”)，并且只有“bits”的“number_of_bits” (缺省64)位被使用。</p><p>SELECT EXPORT_SET(5,'Y','N',',',4) -- Y,N,Y,N</p></td></tr><tr><td><p>FIELD(s,s1,s2...)</p></td><td><p>返回第一个与字符串s匹配的字符串位置</p><p>SELECT FIELD('c','a','b','c') -- 3</p></td></tr><tr><td><p>FIND_IN_SET(s1,s2)</p></td><td><p>返回在字符串s2中与s1匹配的字符串的位置</p></td></tr><tr><td><p>MAKE_SET(x,s1,s2)</p></td><td><p>返回一个集合 (包含由</p><p>“,”</p><p>字符分隔的子串组成的一个 字符串)，由相应的位在<code>bits</code>集合中的的字符串组成。<code>str1</code>对应于位0，<code>str2</code>对 应位1，等等。</p><p>SELECT MAKE_SET(1|4,'a','b','c'); -- a,c</p></td></tr><tr><td><p>SUBSTRING_INDEX</p></td><td><p>返回从字符串str的第count个出现的分隔符delim之后的子串。</p><p>如果count是正数，返回第count个字符左边的字符串。</p><p>如果count是负数，返回第(count的绝对值(从右边数))个字符右边的字符串。</p><p>SELECT SUBSTRING_INDEX('a*b','*',1) -- a<br /><span style=\"background-color: #389E0D;\"><span style=\"color: #FFFFFF;\">SELECT SUBSTRING_INDEX('a*b','*',-1) -- b</span></span><br />SELECT SUBSTRING_INDEX(SUBSTRING_INDEX('a*b*c*d*e','*',3),'*',-1) -- c</p></td></tr><tr><td><p>LOAD_FILE(file_name)</p></td><td><p>读入文件并且作为一个字符串返回文件内容。文件必须在服务器上，你必须指定到文件的完整路径名，而且你必须有file权 限。文件必须所有内容都是可读的并且小于max_allowed_packet。 如果文件不存在或由于上面原因之一不能被读出，函数返回NULL。</p></td></tr></tbody></table><p><br /></p>",
  "slug": 582518,
  "title": "MySQL 字符串函数"
}