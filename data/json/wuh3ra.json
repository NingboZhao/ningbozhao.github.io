{
  "body_html": "<p>事先我已经跑好数据，产出了一个包含</p><p style=\"text-indent: 2em;\">R：Recency，最近一次消费距今天数</p><p style=\"text-indent: 2em;\">F：最近一周订单</p><p style=\"text-indent: 2em;\">M：最近一周用户消费额</p><p>三个数据的表。</p><p><br /></p><pre data-lang=\"python\"><code>import pandas as pd\ndf = pd.read_excel('/Users/zhaoningbo/dataset/rfm.xlsx')</code></pre><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1557925440614-553f21a7-fbfd-43da-b434-c7b0fde7376c.png#align=left&amp;display=inline&amp;height=174&amp;name=image.png&amp;originHeight=348&amp;originWidth=590&amp;size=37802&amp;status=done&amp;width=295\" style=\"max-width: 600px; width: 295px;\" /></p><p><br /></p><p>应该做一个异常值检验，这次先跳过。</p><p><br /></p><pre data-lang=\"python\"><code>import plotly.plotly as py\nimport pandas as pd\n\nscatter = dict(\n    mode = &quot;markers&quot;,\n    name = &quot;y&quot;,\n    type = &quot;scatter3d&quot;,    \n    x = df['r'], y = df['f'], z = df['m'],\n    marker = dict( size=2, color=&quot;rgb(23, 190, 207)&quot; )\n)\nlayout = dict(\n    title = '3d point clustering',\n    scene = dict(\n        xaxis = dict( zeroline=False ),\n        yaxis = dict( zeroline=False ),\n        zaxis = dict( zeroline=False ),\n    )\n)\nfig = dict( data=[scatter], layout=layout )\n# Use py.iplot() for IPython notebook\nplotly.offline.init_notebook_mode() #初始化jupyter notebook中的绘图模式\nplotly.offline.iplot(fig, filename='3d point clustering')</code></pre><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1557925457700-292211aa-1466-4485-92f9-16b1433a766b.png#align=left&amp;display=inline&amp;height=401&amp;name=image.png&amp;originHeight=900&amp;originWidth=794&amp;size=111290&amp;status=done&amp;width=354\" style=\"max-width: 600px; width: 354px;\" /></p><p><br /></p><p><br /></p><pre data-lang=\"python\"><code>#转换数据格式\ntmp=np.array([df.r,df.f,df.m]).T\n#调用python关于机器学习sklearn库中的KMeans\nfrom sklearn.cluster import KMeans\n#设置分为3类，并训练数据\nkms=KMeans(n_clusters=3)\ny=kms.fit_predict(tmp)\n#将分类结果以散点图形式展示\ny</code></pre><p>array([0, 2, 1, ..., 2, 1, 0], dtype=int32)</p><p><br /></p><pre data-lang=\"python\"><code>df[&quot;type&quot;] = y\nd0 = df[df.type==0]\nd1 = df[df.type==1]\nd2 = df[df.type==2]\ndf.type.value_counts()</code></pre><p>0    587</p><p>2    264</p><p>1    227</p><p>Name: type, dtype: int64</p><p><br /></p><pre data-lang=\"python\"><code>import plotly.plotly as py\nimport pandas as pd\n\nscatter0 = dict(\n    mode = &quot;markers&quot;,\n    name = &quot;d0&quot;,\n    type = &quot;scatter3d&quot;,    \n    x = d0['r'], y = d0['f'], z = d0['m'],\n    marker = dict( size=2, color=&quot;rgb(23, 190, 207)&quot; )\n)\n\nscatter1 = dict(\n    mode = &quot;markers&quot;,\n    name = &quot;d1&quot;,\n    type = &quot;scatter3d&quot;,    \n    x = d1['r'], y = d1['f'], z = d1['m'],\n    marker = dict( size=2, color=&quot;rgb(49,54,149)&quot; )\n)\n\nscatter2 = dict(\n    mode = &quot;markers&quot;,\n    name = &quot;d2&quot;,\n    type = &quot;scatter3d&quot;,    \n    x = d2['r'], y = d2['f'], z = d2['m'],\n    marker = dict( size=2, color=&quot;rgb(253,174,97)&quot; )\n)\n\nfig = dict( data=[scatter0,scatter1,scatter2], layout=layout )\n# Use py.iplot() for IPython notebook\nplotly.offline.init_notebook_mode() #初始化jupyter notebook中的绘图模式\nplotly.offline.iplot(fig, filename='3d point clustering')</code></pre><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1557925365311-813b4874-8ed9-4a51-9806-fae05aaff1d4.png#align=left&amp;display=inline&amp;height=477&amp;name=image.png&amp;originHeight=954&amp;originWidth=850&amp;size=119204&amp;status=done&amp;width=425\" style=\"max-width: 600px; width: 425px;\" /></p><p><br /></p><p><br /></p><p>因为一开始就选择了用户价值模型，所以没有做降维。</p><p><br /></p>",
  "slug": 1695961,
  "title": "对 2000 万用户数据进行聚类"
}