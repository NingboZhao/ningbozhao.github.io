{
  "body_html": "<h3><a href=\"#数据导入\"></a>数据导入</h3><p>需要pandas这个数据分析库中的相应模块。其中的read_csv函数能够读取本地和web数据。</p><pre data-lang=\"python\"><code>import pandas as pd\n \n# Reading data locally\ndf = pd.read_csv('/Users/al-ahmadgaidasaad/Documents/d.csv')\n \n# Reading data from web\ndata_url = &quot;https://raw.githubusercontent.com/alstat/Analysis-with-Programming/master/2014/Python/Numerical-Descriptions-of-the-Data/data.csv&quot;\ndf = pd.read_csv(data_url)</code></pre><p><br /></p><h3><a href=\"#数据变换\"></a>数据变换</h3><p>既然在工作空间有了数据，接下来就是数据变换。统计学家和科学家们通常会在这一步移除分析中的非必要数据。我们先看看数据：</p><pre data-lang=\"python\"><code># Head of the data\nprint df.head()\n \n# OUTPUT\n    Abra  Apayao  Benguet  Ifugao  Kalinga\n0   1243    2934      148    3300    10553\n1   4158    9235     4287    8063    35257\n2   1787    1922     1955    1074     4544\n3  17152   14501     3536   19607    31687\n4   1266    2385     2530    3315     8520\n \n# Tail of the data\nprint df.tail()\n \n# OUTPUT\n     Abra  Apayao  Benguet  Ifugao  Kalinga\n74   2505   20878     3519   19737    16513\n75  60303   40065     7062   19422    61808\n76   6311    6756     3561   15910    23349\n77  13345   38902     2583   11096    68663\n78   2623   18264     3745   16787    16900</code></pre><p><br /></p><p>Python中，默认打印是5行。df.head(n = 10)，打印数据尾部也是同样道理。</p><p><br /></p><p>在Python中，我们则使用columns和index属性来提取数据，如下：</p><pre data-lang=\"python\"><code># Extracting column names\nprint df.columns\n \n# OUTPUT\nIndex([u'Abra', u'Apayao', u'Benguet', u'Ifugao', u'Kalinga'], dtype='object')\n \n# Extracting row names or the index\nprint df.index\n \n# OUTPUT\nInt64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], dtype='int64')</code></pre><p><br /></p><p>数据转置使用T方法</p><pre data-lang=\"python\"><code># Transpose data\nprint df.T\n \n# OUTPUT\n            0      1     2      3     4      5     6      7     8      9   \nAbra      1243   4158  1787  17152  1266   5576   927  21540  1039   5424   \nApayao    2934   9235  1922  14501  2385   7452  1099  17038  1382  10588   \nBenguet    148   4287  1955   3536  2530    771  2796   2463  2592   1064   \nIfugao    3300   8063  1074  19607  3315  13134  5134  14226  6842  13828   \nKalinga  10553  35257  4544  31687  8520  28252  3106  36238  4973  40140   \n \n         ...       69     70     71     72     73     74     75     76     77  \nAbra     ...    12763   2470  59094   6209  13316   2505  60303   6311  13345   \nApayao   ...    37625  19532  35126   6335  38613  20878  40065   6756  38902   \nBenguet  ...     2354   4045   5987   3530   2585   3519   7062   3561   2583   \nIfugao   ...     9838  17125  18940  15560   7746  19737  19422  15910  11096   \nKalinga  ...    65782  15279  52437  24385  66148  16513  61808  23349  68663   \n \n            78  \nAbra      2623  \nApayao   18264  \nBenguet   3745  \nIfugao   16787  \nKalinga  16900  \n \nOther transformations such as sort can be done using &lt;code&gt;sort&lt;/code&gt; attribute. Now let's extract a specific column. In Python, we do it using either &lt;code&gt;iloc&lt;/code&gt; or &lt;code&gt;ix&lt;/code&gt; attributes, but &lt;code&gt;ix&lt;/code&gt; is more robust and thus I prefer it. Assuming we want the head of the first column of the data, we have</code></pre><p><br /></p><p>其他变换，例如排序就是用sort属性。现在我们提取特定的某列数据。Python中，可以使用iloc或者ix属性。但是我更喜欢用ix，因为它更稳定一些。假设我们需数据第一列的前5行，我们有：</p><pre data-lang=\"python\"><code>print df.ix[:, 0].head()\n \n# OUTPUT\n0     1243\n1     4158\n2     1787\n3    17152\n4     1266\nName: Abra, dtype: int64</code></pre><p><br /></p><p>顺便提一下，Python的索引是从0开始而非1。为了取出从11到20行的前3列数据，我们有：</p><pre data-lang=\"python\"><code>print df.ix[10:20, 0:3]\n \n# OUTPUT\n    Abra  Apayao  Benguet\n10    981    1311     2560\n11  27366   15093     3039\n12   1100    1701     2382\n13   7212   11001     1088\n14   1048    1427     2847\n15  25679   15661     2942\n16   1055    2191     2119\n17   5437    6461      734\n18   1029    1183     2302\n19  23710   12222     2598\n20   1091    2343     2654</code></pre><p>上述命令相当于<code>df.ix[10:20, ['Abra', 'Apayao', 'Benguet']]</code>。</p><p><br /></p><p>为了舍弃数据中的列，这里是列1(Apayao)和列2(Benguet)，我们使用drop属性，如下：</p><pre data-lang=\"python\"><code>print df.drop(df.columns[[1, 2]], axis = 1).head()\n \n# OUTPUT\n    Abra  Ifugao  Kalinga\n0   1243    3300    10553\n1   4158    8063    35257\n2   1787    1074     4544\n3  17152   19607    31687\n4   1266    3315     8520</code></pre><p><code>axis</code>参数告诉函数到底舍弃列还是行。如果<code>axis</code>等于0，那么就舍弃行。</p><p><br /></p><h3><a href=\"#统计描述\"></a>统计描述</h3><p>下一步就是通过<code>describe</code>属性，对数据的统计特性进行描述：</p><pre data-lang=\"python\"><code>print df.describe()\n \n# OUTPUT\n               Abra        Apayao      Benguet        Ifugao       Kalinga\ncount     79.000000     79.000000    79.000000     79.000000     79.000000\nmean   12874.379747  16860.645570  3237.392405  12414.620253  30446.417722\nstd    16746.466945  15448.153794  1588.536429   5034.282019  22245.707692\nmin      927.000000    401.000000   148.000000   1074.000000   2346.000000\n25%     1524.000000   3435.500000  2328.000000   8205.000000   8601.500000\n50%     5790.000000  10588.000000  3202.000000  13044.000000  24494.000000\n75%    13330.500000  33289.000000  3918.500000  16099.500000  52510.500000\nmax    60303.000000  54625.000000  8813.000000  21031.000000  68663.000000</code></pre><p><br /></p><h3><a href=\"#假设检验\"></a>假设检验</h3><p>Python有一个很好的统计推断包。那就是scipy里面的stats。ttest_1samp实现了单样本t检验。因此，如果我们想检验数据Abra列的稻谷产量均值，通过零假设，这里我们假定总体稻谷产量均值为15000，我们有：</p><pre data-lang=\"python\"><code>from scipy import stats as ss\n \n# Perform one sample t-test using 1500 as the true mean\nprint ss.ttest_1samp(a = df.ix[:, 'Abra'], popmean = 15000)\n \n# OUTPUT\n(-1.1281738488299586, 0.26270472069109496)</code></pre><p><br /></p><p><a href=\"http://python.jobbole.com/81133/\" target=\"_blank\">http://python.jobbole.com/81133/</a></p>",
  "slug": 582283,
  "title": "pandas"
}