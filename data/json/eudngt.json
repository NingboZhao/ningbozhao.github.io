{
  "body_html": "<p>原文：<a href=\"https://medium.com/datadriveninvestor/how-to-build-exponential-smoothing-models-using-python-simple-exponential-smoothing-holt-and-da371189e1a1\" target=\"_blank\">How to Build Exponential Smoothing Models Using Python: Simple Exponential Smoothing, Holt, and…</a></p><p><br /></p><p>需要用到 statsmodels 这个包。</p><pre data-lang=\"python\"><code>import matplotlib.pyplot as plt\nfrom statsmodels.tsa.holtwinters import ExponentialSmoothing, SimpleExpSmoothing, Holt</code></pre><p><br /></p><p>示例中的源数据：</p><pre data-lang=\"python\"><code>data = [253993,275396.2,315229.5,356949.6,400158.2,442431.7,495102.9,570164.8,640993.1,704250.4,767455.4,781807.8,776332.3,794161.7,834177.7,931651.5,1028390,1114914]\nplt.plot(data);</code></pre><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432367334-712c2a84-c404-491a-99ed-e1127b7b32eb.png#align=left&amp;display=inline&amp;height=234&amp;name=image.png&amp;originHeight=468&amp;originWidth=974&amp;size=34963&amp;status=done&amp;width=487\" style=\"max-width: 600px; width: 487px;\" /></p><p><br /></p><h2 id=\"ses\" style=\"background-color: #FEFEFE;\">简单指数平滑(SES)</h2><p>对于<strong>没有明显趋势或季节规律</strong>的预测数据，SES是一个很好的选择。预测是使用加权平均来计算的，这意味着最大的权重与最近的观测值相关，而最小的权重与最远的观测值相关</p><p style=\"text-align: center;\"><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432402936-dc8a8d9a-01b8-46e0-96c9-4172d417381e.png#align=left&amp;display=inline&amp;height=39&amp;name=image.png&amp;originHeight=63&amp;originWidth=638&amp;size=7019&amp;status=done&amp;width=398\" style=\"max-width: 600px; width: 398px;\" /></p><p>其中0≤α≤1是平滑参数。</p><p>权重减小率由平滑参数α控制。 如果α很大（即接近1），则对更近期的观察给予更多权重。 有两种极端情况：</p><ul><li>α= 0：所有未来值的预测等于历史数据的平均值（或“平均值”），称为<strong>平均值法</strong>。</li><li>α= 1：简单地将所有预测设置为最后一次观测的值，统计中称为<strong>朴素方法</strong>。</li></ul><p>这里我们运行三种简单指数平滑变体：</p><ol><li>在fit1中，我们明确地为模型提供了平滑参数α=0.2</li><li>在fit2中，我们选择α=0.6</li><li>在fit3中，我们使用自动优化，允许statsmodels自动为我们找到优化值。 这是推荐的方法。</li></ol><p><br /></p><pre data-lang=\"python\"><code># Simple Exponential Smoothing\nfit1 = SimpleExpSmoothing(data).fit(smoothing_level=0.2,optimized=False)\n# plot\nl1, = plt.plot(list(fit1.fittedvalues) + list(fit1.forecast(5)), marker='o')\n\n\nfit2 = SimpleExpSmoothing(data).fit(smoothing_level=0.6,optimized=False)\n# plot\nl2, = plt.plot(list(fit2.fittedvalues) + list(fit2.forecast(5)), marker='o')\n\n\nfit3 = SimpleExpSmoothing(data).fit()\n# plot\nl3, = plt.plot(list(fit3.fittedvalues) + list(fit3.forecast(5)), marker='o')\n\nl4, = plt.plot(data, marker='o')\nplt.legend(handles = [l1, l2, l3, l4], labels = ['a=0.2', 'a=0.6', 'auto', 'data'], loc = 'best', prop={'size': 7})\nplt.show()\n\n# 我们预测了未来五个点</code></pre><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432500983-7ebdd4de-5f6f-464e-95d3-9a9b134613db.png#align=left&amp;display=inline&amp;height=234&amp;name=image.png&amp;originHeight=468&amp;originWidth=962&amp;size=68814&amp;status=done&amp;width=481\" style=\"max-width: 600px; width: 481px;\" /></p><p><br /></p><h2 id=\"holts\" style=\"background-color: #FEFEFE;\">Holt's 方法(二次指数平滑)</h2><p>Holt扩展了简单的指数平滑（数据解决方案没有明确的趋势或季节性），以便在1957年预测数据趋势。Holt的方法包括预测方程和两个平滑方程（一个用于水平，一个用于趋势）：</p><p style=\"text-align: center;\"><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432551140-22ab88b7-d5d7-4f42-925a-8d56c7cfe9ac.png#align=left&amp;display=inline&amp;height=75&amp;name=image.png&amp;originHeight=136&amp;originWidth=713&amp;size=22203&amp;status=done&amp;width=391\" style=\"max-width: 600px; width: 391px;\" /></p><p><br /></p><p style=\"background-color: #FEFEFE;\">其中<span class=\"lake-fontsize-12\"><span><span><span><span>0</span><span>≤</span><span><span><span>α</span></span></span><span>≤</span><span>1</span></span></span></span></span>是水平平滑参数，<span class=\"lake-fontsize-12\"><span><span><span><span>0</span><span>≤</span><span><span><span>β</span></span></span><span>∗</span><span>≤</span><span>1</span></span></span></span></span>是趋势平滑参数。</p><p style=\"background-color: #FEFEFE;\">对于长期预测，使用Holt方法的预测在未来会无限期地增加或减少。 在这种情况下，我们使用具有阻尼参数<span class=\"lake-fontsize-12\"><span><span><span><span>0</span><span>&lt;</span><span><span><span>φ</span></span></span><span>&lt;</span><span>1</span></span></span></span></span>的<strong>阻尼趋势方法</strong>来防止预测“失控”。</p><p style=\"background-color: #FEFEFE; text-align: center;\"><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432587930-a4767a2a-2dc3-492c-8206-09421c4273f2.png#align=left&amp;display=inline&amp;height=71&amp;name=image.png&amp;originHeight=123&amp;originWidth=612&amp;size=16382&amp;status=done&amp;width=352\" style=\"max-width: 600px; width: 352px;\" /></p><p style=\"background-color: #FEFEFE;\"><br /></p><p style=\"background-color: #FEFEFE;\">同样，这里我们运行Halt方法的三种变体：</p><ol style=\"background-color: #FEFEFE;\"><li>在<code>fit1</code>中，我们明确地为模型提供了平滑参数<span class=\"lake-fontsize-12\"><span><span><span><span><span><span>α</span></span></span><span>=</span><span>0.8</span></span></span></span></span>，<span class=\"lake-fontsize-12\"><span><span><span><span><span><span>β</span></span></span><span>∗</span><span>=</span><span>0.2</span></span></span></span></span>。</li><li>在<code>fit2</code>中，我们使用指数模型而不是Holt的加法模型（默认值）。</li><li>在<code>fit3</code>中，我们使用阻尼版本的Holt附加模型，但允许优化阻尼参数<span class=\"lake-fontsize-12\"><span><span><span><span><span><span>φ</span></span></span></span></span></span></span>，同时固定<span class=\"lake-fontsize-12\"><span><span><span><span><span><span>α</span></span></span><span>=</span><span>0.8</span></span></span></span></span>，<span class=\"lake-fontsize-12\"><span><span><span><span><span><span>β</span></span></span><span>∗</span><span>=</span><span>0.2</span></span></span></span></span>的值。</li></ol><p><br /></p><pre data-lang=\"python\"><code>data_sr = pd.Series(data)\n# Holt’s Method\nfit1 = Holt(data_sr).fit(smoothing_level=0.8, smoothing_slope=0.2, optimized=False)\nl1, = plt.plot(list(fit1.fittedvalues) + list(fit1.forecast(5)), marker='^')\n\nfit2 = Holt(data_sr, exponential=True).fit(smoothing_level=0.8, smoothing_slope=0.2, optimized=False)\nl2, = plt.plot(list(fit2.fittedvalues) + list(fit2.forecast(5)), marker='.')\n\nfit3 = Holt(data_sr, damped=True).fit(smoothing_level=0.8, smoothing_slope=0.2)\nl3, = plt.plot(list(fit3.fittedvalues) + list(fit3.forecast(5)), marker='.')\n\nl4, = plt.plot(data_sr, marker='.')\nplt.legend(handles = [l1, l2, l3, l4], labels = [&quot;Holt's linear trend&quot;, &quot;Exponential trend&quot;, &quot;Additive damped trend&quot;, 'data'], loc = 'best', prop={'size': 7})\nplt.show()</code></pre><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432645961-32fea82f-d45f-41e0-90e6-0d02cc305f65.png#align=left&amp;display=inline&amp;height=225&amp;name=image.png&amp;originHeight=450&amp;originWidth=963&amp;size=66168&amp;status=done&amp;width=481.5\" style=\"max-width: 600px; width: 481.5px;\" /></p><p><br /></p><h2 id=\"holt-winters\" style=\"background-color: #FEFEFE;\">Holt-Winters 方法(三次指数平滑)</h2><p style=\"background-color: #FEFEFE;\"><span class=\"lake-fontsize-12\" style=\"color: #353535; background-color: #FEFEFE;\">(彼得·温特斯(Peter Winters)是霍尔特(Holt)的学生。霍尔特-温特斯法最初是由彼得提出的，后来他们一起研究。</span></p><p style=\"background-color: #FEFEFE;\"><span class=\"lake-fontsize-12\" style=\"color: #353535; background-color: #FEFEFE;\"><br /></span>Holt-Winters的方法适用于具有趋势和季节性的数据，其包括季节性平滑参数<span class=\"lake-fontsize-12\"><span><span><span><span><span><span>γ</span></span></span></span></span></span><span>γ</span></span>。 此方法有两种变体：</p><ul style=\"background-color: #FEFEFE;\"><li><strong>加法方法</strong>：整个序列的季节变化基本保持不变。</li><li><strong>乘法方法</strong>：季节变化与系列水平成比例变化。</li></ul><p style=\"background-color: #FEFEFE;\">在这里，我们运行完整的Holt-Winters方法，包括趋势组件和季节性组件。 Statsmodels允许所有组合，包括如下面的示例所示：</p><ol style=\"background-color: #FEFEFE;\"><li>在<code>fit1</code>中，我们使用加法趋势，周期<code>season_length = 4</code>的加性季节和<code>Box-Cox</code>变换。</li><li>在<code>fit2</code>中，我们使用加法趋势，周期<code>season_length = 4</code>的乘法季节和<code>Box-Cox</code>变换。</li><li>在<code>fit3</code>中，我们使用加性阻尼趋势，周期<code>season_length = 4</code>的加性季节和<code>Box-Cox</code>变换。</li><li>在<code>fit4</code>中，我们使用加性阻尼趋势，周期<code>season_length = 4</code>的乘法季节和<code>Box-Cox</code>变换。</li></ol><p><br /></p><pre data-lang=\"python\"><code>data_sr = pd.Series(data)\nfit1 = ExponentialSmoothing(data_sr, seasonal_periods=4, trend='add', seasonal='add').fit(use_boxcox=True)\nfit2 = ExponentialSmoothing(data_sr, seasonal_periods=4, trend='add', seasonal='mul').fit(use_boxcox=True)\nfit3 = ExponentialSmoothing(data_sr, seasonal_periods=4, trend='add', seasonal='add', damped=True).fit(use_boxcox=True)\nfit4 = ExponentialSmoothing(data_sr, seasonal_periods=4, trend='add', seasonal='mul', damped=True).fit(use_boxcox=True)\n\nl1, = plt.plot(list(fit1.fittedvalues) + list(fit1.forecast(5)), marker='^')\nl2, = plt.plot(list(fit2.fittedvalues) + list(fit2.forecast(5)), marker='*')\nl3, = plt.plot(list(fit3.fittedvalues) + list(fit3.forecast(5)), marker='.')\nl4, = plt.plot(list(fit4.fittedvalues) + list(fit4.forecast(5)), marker='.')\n\nl5, = plt.plot(data, marker='.')\nplt.legend(handles = [l1, l2, l3, l4, l5], labels = [&quot;aa&quot;, &quot;am&quot;, &quot;aa damped&quot;, &quot;am damped&quot;,&quot;data&quot;], loc = 'best', prop={'size': 7})\n\nplt.show()</code></pre><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432707498-81861431-9c1d-4ec2-a5be-54a145b56828.png#align=left&amp;display=inline&amp;height=222&amp;name=image.png&amp;originHeight=444&amp;originWidth=980&amp;size=68025&amp;status=done&amp;width=490\" style=\"max-width: 600px; width: 490px;\" /></p><p><br /></p><p style=\"background-color: #FEFEFE;\">总而言之，我们通过3个指数平滑模型的机制和python代码。 如下表所示，我提供了一种为数据集选择合适模型的方法。</p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432719749-ef9bf11e-a71d-472d-8203-adeae9bc0ac5.png#align=left&amp;display=inline&amp;height=124&amp;name=image.png&amp;originHeight=204&amp;originWidth=800&amp;size=28964&amp;status=done&amp;width=488\" style=\"max-width: 600px; width: 488px;\" /></p><p><br /></p><p>总结了指数平滑方法中不同分量形式的平滑参数。</p><p><span class=\"lake-fontsize-12\" style=\"color: #353535; background-color: #FEFEFE;\"><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/85998/1558432775815-f364f99d-5517-4c6c-b087-363adc614a14.png#align=left&amp;display=inline&amp;height=79&amp;name=image.png&amp;originHeight=130&amp;originWidth=795&amp;size=10324&amp;status=done&amp;width=486\" style=\"max-width: 600px; width: 486px;\" /></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #353535; background-color: #FEFEFE;\"><br /></span>指数平滑是当今行业中应用最广泛、最成功的预测方法之一。如何预测零售额、游客数量、电力需求或收入增长？指数平滑是你需要展现未来的超能力之一。</p>",
  "slug": 1731837,
  "title": "时间序列：Holt-Winters 平滑模型"
}