<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>标签 on 企鹅商业报告中心</title>
    <link>https://tutorials.drone.io/tags/%E6%A0%87%E7%AD%BE/</link>
    <description>Recent content in 标签 on 企鹅商业报告中心</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 01 Jan 2000 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tutorials.drone.io/tags/%E6%A0%87%E7%AD%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Publishing Go Docker Images on ARM</title>
      <link>https://tutorials.drone.io/publish-golang-docker-images-for-aarch64/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate>
      
      <guid>https://tutorials.drone.io/publish-golang-docker-images-for-aarch64/</guid>
      <description>This guide will walk you through the steps required to build and publish aarch64 Docker images for Go projects. This guide assumes you have a basic understanding of Go and Docker, and that you have Go and Docker installed.
Setup a Go Project First we setup a go.mod file for our project. The module file defines the project namespace and dependencies:
module github.com/octocat/hello-world  Next we create a simple Go program.</description>
    </item>
    
    <item>
      <title>测试适度</title>
      <link>https://tutorials.drone.io/publish-golang-docker-images-for-aarch64/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate>
      
      <guid>https://tutorials.drone.io/publish-golang-docker-images-for-aarch64/</guid>
      <description>This guide will walk you through the steps required to build and publish aarch64 Docker images for Go projects. This guide assumes you have a basic understanding of Go and Docker, and that you have Go and Docker installed.
Setup a Go Project First we setup a go.mod file for our project. The module file defines the project namespace and dependencies:
module github.com/octocat/hello-world  Next we create a simple Go program.</description>
    </item>
    
  </channel>
</rss>